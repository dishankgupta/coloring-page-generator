
import { GoogleGenAI } from "@google/genai";

// The API key is expected to be set in the environment variables.
if (!process.env.API_KEY) {
    console.error("API_KEY environment variable not set. The app will not function.");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY! });

// This prefix enhances the user's prompt to generate images in a consistent coloring book style.
const ENHANCED_PROMPT_PREFIX = "coloring book page for kids, simple bold outlines, black and white, no shading, clean lines, white background, ";

/**
 * Generates an image using the Imagen model.
 * @param userPrompt The user-provided description for the image.
 * @returns A promise that resolves with the base64 encoded image string.
 */
export const generateImage = async (userPrompt: string): Promise<string> => {
    const fullPrompt = `${ENHANCED_PROMPT_PREFIX}${userPrompt}`;

    try {
        const response = await ai.models.generateImages({
            model: 'imagen-3.0-generate-002',
            prompt: fullPrompt,
            config: {
                numberOfImages: 1,
                outputMimeType: 'image/png',
                aspectRatio: '1:1',
            },
        });

        const base64ImageBytes = response.generatedImages?.[0]?.image?.imageBytes;
        if (base64ImageBytes) {
            return base64ImageBytes;
        }
        
        throw new Error("No image was generated by the API. The response may have been blocked.");

    } catch (error) {
        console.error("Error generating image:", error);
        if (error instanceof Error) {
            return Promise.reject(`Failed to generate image. API Error: ${error.message}`);
        }
        return Promise.reject("An unknown error occurred while generating the image.");
    }
};
